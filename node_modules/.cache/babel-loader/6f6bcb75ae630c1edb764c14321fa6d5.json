{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shipra/Desktop/quotegenrator/src/Quotes.js\";\n// import logo from './logo.svg';\nimport React from 'react'; // import './Quotes.scss';\n\nclass Quotes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callNextQoute = () => {\n      this.setState({\n        randomNo: Math.floor(Math.random() * this.state.quotesArry.length)\n      });\n    };\n\n    this.state = {\n      randomNo: 0,\n      quotesArry: []\n    };\n    this.callNextQoute = this.callNextQoute.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://type.fit/api/quotes\").then(resp => resp.json()).then(result => {\n      this.setState({\n        quotesArry: result\n      });\n    }, error => console.log(error));\n  }\n\n  render() {\n    const randomIndex = Math.floor(Math.random() * this.state.quotesArry.length);\n    const {\n      quotesArry,\n      randomNo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: quotesArry[randomNo] && /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", quotesArry[randomNo].text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", quotesArry[randomNo].author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.callNextQoute(),\n          children: \" Next Qoute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default Quotes;","map":{"version":3,"sources":["/Users/shipra/Desktop/quotegenrator/src/Quotes.js"],"names":["React","Quotes","Component","constructor","props","callNextQoute","setState","randomNo","Math","floor","random","state","quotesArry","length","bind","componentDidMount","fetch","then","resp","json","result","error","console","log","render","randomIndex","text","author"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAoC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAgBlBC,aAhBkB,GAgBJ,MAAI;AAChB,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAA/C;AADG,OAAd;AAGD,KApBiB;;AAEhB,SAAKF,KAAL,GAAW;AACTJ,MAAAA,QAAQ,EAAC,CADA;AAETK,MAAAA,UAAU,EAAC;AAFF,KAAX;AAIA,SAAKP,aAAL,GAAmB,KAAKA,aAAL,CAAmBS,IAAnB,CAAwB,IAAxB,CAAnB;AACD;;AACDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAEA,IAAI,CAACC,IAAL,EADZ,EAECF,IAFD,CAEMG,MAAM,IAAG;AACb,WAAKd,QAAL,CAAc;AAACM,QAAAA,UAAU,EAACQ;AAAZ,OAAd;AACD,KAJD,EAIGC,KAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJX;AAMD;;AAMDG,EAAAA,MAAM,GAAE;AACR,UAAMC,WAAW,GAAEjB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAA/C,CAAnB;AACA,UAAM;AAACD,MAAAA,UAAD;AAAYL,MAAAA;AAAZ,QAAsB,KAAKI,KAAjC;AACA,wBACE;AAAA,gBACEC,UAAU,CAACL,QAAD,CAAV,iBACC;AAAA,gCACD;AAAA,0BAAKK,UAAU,CAACL,QAAD,CAAV,CAAqBmB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC,eAED;AAAA,0BAAQd,UAAU,CAACL,QAAD,CAAV,CAAqBoB,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFC,eAGD;AAAQ,UAAA,OAAO,EAAE,KAAKtB,aAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA,YADF;AAWG;;AApCiC;;AAwCpC,eAAeJ,MAAf","sourcesContent":["// import logo from './logo.svg';\nimport React from 'react';\n// import './Quotes.scss';\nclass Quotes extends React.Component{\nconstructor(props){\n  super(props)\n  this.state={\n    randomNo:0,\n    quotesArry:[],\n  }\n  this.callNextQoute=this.callNextQoute.bind(this)\n}\ncomponentDidMount(){\n  fetch(\"https://type.fit/api/quotes\")\n  .then(resp=>resp.json ())\n  .then(result =>{\n    this.setState({quotesArry:result})\n  },(error)=>console.log(error)\n  );\n}\ncallNextQoute=()=>{\n  this.setState({\n    randomNo:Math.floor(Math.random()*this.state.quotesArry.length)\n  })\n}\nrender(){\nconst randomIndex =Math.floor(Math.random()*this.state.quotesArry.length);\nconst {quotesArry,randomNo}=this.state;\nreturn (\n  <div>\n   {quotesArry[randomNo] && (\n     <section>\n    <p> {quotesArry[randomNo].text}</p>\n    <span> {quotesArry[randomNo].author}</span>\n    <button onClick={this.callNextQoute()}> Next Qoute</button>\n    </section>)\n  }\n  </div>)\n\n  }\n\n}\n  \nexport default Quotes;\n"]},"metadata":{},"sourceType":"module"}